
#------------------------------------------------------------------------------
#
# Name: MAD Brain Buzz
#
# Description: Monitor if MADBrain is OK. If the MADBrain is on error, Buzz 
#
# Inputs:
#		MADBRAINvalid
#		DCU_BUZZ_ON
#
# Parameters:
#	
# Dependences:
#		BatteryBuzzCounter
#
# Computed Vars:
#		DCU_BUZZ
#
# Outputs:
#		Battery_Buzz_ES_OK
#		Battery_Buzz_ES_KO
#		BatteryBuzzCounter_ES_RESET
#
#------------------------------------------------------------------------------

new TChooser( BatteryValid, "&Alarm_Battery_Input == -1 or &Alarm_Battery_Input == 1", 1, 0, CalculeVar_010 )
new TChooser( Battery_Alarm, "&Alarm_Battery_Input == 1", 1, 0, CalculeVar_010 )


new TExpertSys( Battery_Buzz_ES )
//
// ExpertSystem States
//
Battery_Buzz_ES.AddState( OK )
Battery_Buzz_ES.AddState( KO )
//
// ExpertSystem Conditions
//
Battery_Buzz_ES.Stop()

Battery_Buzz_ES.OK.AddCondition( "&BatteryValid or (&DCU_BUZZ_ON == 0) or (&DCU_BUZZ_ON == 1 and &BatteryValid == 0 and &BatteryBuzzCounter == 0) " )

Battery_Buzz_ES.OK.AddAction( "DCU_BUZZ.Set( 0 )" )
Battery_Buzz_ES.OK.AddAction( "alarm_nb.SetValue( 0 )" )

Battery_Buzz_ES.KO.AddCondition( "(&DCU_BUZZ_ON == 1) and (&Battery_Alarm == 1) and (&BatteryBuzzCounter == 2) " )

Battery_Buzz_ES.KO.AddAction( "DCU_BUZZ.Set( 1 )" )
Battery_Buzz_ES.KO.AddAction( "alarm_nb.SetValue( 10 )" )

Battery_Buzz_ES.Start()


# Buzz counter
new TAdd( BatteryBuzzCounter, BatteryBuzzCounter, 1, CalculeVar_001 )

new TExpertSys( BatteryBuzzCounter_ES )
//
// ExpertSystem States
//
BatteryBuzzCounter_ES.AddState( RESET )
//
// ExpertSystem Conditions
//
BatteryBuzzCounter_ES.Stop()

BatteryBuzzCounter_ES.RESET.AddCondition( "&BatteryBuzzCounter > 2" )

BatteryBuzzCounter_ES.RESET.AddAction( "BatteryBuzzCounter.SetValue( 0 )" )

BatteryBuzzCounter_ES.Start()
